<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.mycompany.webapp.place.dao.PlaceDao">

	<!-- 관광지 총 개수 (중복없이)-->
	<select id="count" parameterType="String" resultType="int">  
		SELECT COUNT(DISTINCT PLACE_NAME)
		  FROM PLACE
		 WHERE CATEGORY=#{category}
	</select>
	

	
	<!-- 중복 관광지 제외 페이징 처리할 관광지 리스트 -->
	<select id="selectPlaceList" parameterType="map" resultType="place">  
		SELECT RNUM
			  ,PLACE_NAME AS placeName
			  ,AREA_NAME AS AREANAME,DETAIL_CD_NAME AS category
			  ,FILE_SAVED_NAME AS fileSavedName
		 FROM(
			   SELECT ROWNUM AS RNUM
			   		 ,PLACE_NAME
			   		 ,AREA_NAME
			         ,DETAIL_CD_NAME
			         ,FILE_SAVED_NAME
			   FROM(
				    SELECT M.PLACE_NAME
				          ,M.AREA_NAME
				          ,D.DETAIL_CD_NAME
				          ,M.FILE_SAVED_NAME
				      FROM(
				      	   SELECT ROW_NUMBER() OVER(PARTITION BY PLACE_NAME ORDER BY AREA_NAME)AS RN 
				      	   		 ,PLACE_NAME, AREA_NAME 
				      	         ,CATEGORY 
				      	   	 	 ,FILE_SAVED_NAME
    					     FROM PLACE FULL OUTER JOIN UPLOAD_FILE
    				           ON PLACE.PLACE_NAME = UPLOAD_FILE.FILE_CODE
    				        WHERE PLACE.CATEGORY=#{category} )M,DETAIL_CODE D
					 WHERE M.CATEGORY=D.DETAIL_CD_ID AND RN=1
					 ORDER BY M.PLACE_NAME
					)
			   WHERE ROWNUM &lt;=#{endRowNo}
			  )
		 WHERE RNUM &gt;=#{startRowNo}
	</select>  
	
	<!--키워드 검색결과 리스트 -->
	<select id="KeywordPlaceSearch" parameterType="map"  resultType="place">
	
		SELECT RNUM,PLACE_NAME AS placeName 
			  ,AREA_NAME AS areaName
			  ,DETAIL_CD_NAME AS category
			  ,FILE_SAVED_NAME AS fileSavedName
		  FROM (
				SELECT ROWNUM AS RNUM
					  ,PLACE_NAME,AREA_NAME
					  ,DETAIL_CD_NAME
					  ,FILE_SAVED_NAME
				  FROM(
					   SELECT M.PLACE_NAME
					 	     ,M.AREA_NAME
					 	     ,D.DETAIL_CD_NAME
					 	     ,M.FILE_SAVED_NAME
					     FROM(
					   		  SELECT P.PLACE_NAME
							        ,P.AREA_NAME
							        ,P.CATEGORY
							        ,F.FILE_SAVED_NAME
							        ,ROW_NUMBER() OVER(PARTITION BY PLACE_NAME ORDER BY AREA_NAME)AS RN
   					 		    FROM (
   					 		  		  SELECT PLACE_NAME
   					 		  			    ,AREA_NAME
   					 		  			    ,CATEGORY
         				   			    FROM PLACE)P 
         				   			  FULL OUTER JOIN 
          				  		     (
          				  		   	  SELECT FILE_CODE
          				  		    	    ,FILE_SAVED_NAME
           				   			    FROM UPLOAD_FILE)F
    							  ON P.PLACE_NAME=F.FILE_CODE
    					    ORDER BY PLACE_NAME)M, DETAIL_CODE D
				  <trim prefix="where" prefixOverrides="and|or">
					  <if test="keyword != null and keyword !='' ">
						  <if test="key=='p.area_name'">
							  AND RN=1 AND AREA_NAME LIKE '%'||#{keyword}||'%' AND M.CATEGORY=D.DETAIL_CD_ID
						  </if>
						  <if test="key=='p.place_name'">
							  AND RN=1 AND PLACE_NAME LIKE '%'||#{keyword}||'%' AND M.CATEGORY=D.DETAIL_CD_ID
						  </if>
					  </if>
				  </trim>

					   )
		  		 WHERE ROWNUM &lt;=#{endRowNo}
				)
		  WHERE RNUM &gt;=#{startRowNo}
	</select>
	
	<!--검색결과 총 개수 -->
	<select id="countKeyword" parameterType="map" resultType="int">
			SELECT COUNT(*)
			FROM (SELECT PLACE_NAME
						,AREA_NAME
						,CATEGORY
						,ROW_NUMBER() OVER(PARTITION BY PLACE_NAME ORDER BY AREA_NAME DESC)AS RN 
					FROM PLACE
				  )P,DETAIL_CODE D
			<trim prefix="where" prefixOverrides="AND|OR">
				<if test="keyword != null and keyword !='' ">
					<if test="key=='p.area_name'">
						AND RN=1 AND P.AREA_NAME LIKE '%'||#{keyword}||'%' AND P.CATEGORY=D.DETAIL_CD_ID
					</if>
					<if test="key=='p.place_name'">
						AND RN=1 AND P.PLACE_NAME LIKE '%'||#{keyword}||'%' AND P.CATEGORY=D.DETAIL_CD_ID
					</if>
				</if>
			</trim>
	</select>
	
	<!--관광지 상세페이지의 정보 -->
	<select id="detailPlaceInfo" parameterType="String" resultType="place">
		SELECT DISTINCT M.PLACE_NAME AS placeName
			  ,M.AREA_NAME AS areaName
			  ,D.DETAIL_CD_NAME AS category
			  ,M.FILE_SAVED_NAME AS fileSavedName
			  ,M.PLACE_DETAIL AS placeDeatil
		  FROM (
		  		SELECT P.PLACE_NAME
				   	  ,P.AREA_NAME
			  	      ,P.CATEGORY
				      ,P.PLACE_DETAIL
				      ,F.FILE_SAVED_NAME
    			 FROM (
    			 	   SELECT PLACE_NAME
    			 	   		 ,AREA_NAME
    			 	   		 ,CATEGORY
    			 	   		 ,PLACE_DETAIL
          			 	FROM PLACE)P 
          			 	FULL OUTER JOIN 
          			  (
          			   SELECT FILE_CODE
          			   		 ,FILE_SAVED_NAME
           				 FROM UPLOAD_FILE)F
    			   ON P.PLACE_NAME=F.FILE_CODE
    		 ORDER BY PLACE_NAME)M, DETAIL_CODE D
    	WHERE PLACE_NAME=#{placeName} AND M.CATEGORY=D.DETAIL_CD_ID
	</select>
	
	<!-- 관광지 리스트에서 관광지정보 -->
	<select id="placeInfo" parameterType="String" resultType="place">
		SELECT DISTINCT P.PLACE_NAME AS placeName
			  ,P.AREA_NAME AS areaName
			  ,D.DETAIL_CD_NAME AS category
			  ,P.PLACE_DETAIL AS placeDetail
          FROM PLACE P,DETAIL_CODE D
         WHERE PLACE_NAME=#{placeName} AND P.CATEGORY=D.DETAIL_CD_ID
	</select>
	
	<!-- 현위치에서 관광지까지 거리 리스트 -->
	<select id="selectPlaceDistance" parameterType="map" resultType="place">
		SELECT PLACE_NAME AS PLACENAME
			  ,ROUND(DISTANCE,1) AS DISTANCE
			  ,INDOOR AS INDOOR
			  ,FILE_SAVED_NAME AS FILESAVEDNAME
		  FROM (
		  		SELECT PLACE_NAME
		  			  ,INDOOR,SCORE
		  			  ,FILE_SAVED_NAME
					  ,(6371 * ACOS(COS(CAST(LAT AS FLOAT) * 3.14 / 180.0) * COS(#{lat} * 3.14 / 180.0) 
		                *COS((#{lng}* 3.14 / 180.0) - (CAST(LON AS FLOAT) * 3.14 / 180.0)) + SIN(CAST(LAT AS FLOAT) * 3.14 / 180.0) 
		                *SIN(#{lat} * 3.14 / 180.0))) AS DISTANCE
    		     FROM PLACE P 
    		     FULL OUTER JOIN 
    		   (
    		    SELECT ROW_NUMBER() OVER(PARTITION BY FILE_CODE ORDER BY FILE_SAVED_NAME)AS RN
    		    	  ,FILE_CODE
    		    	  ,FILE_SAVED_NAME
				  FROM UPLOAD_FILE
			  GROUP BY FILE_CODE,FILE_SAVED_NAME)F
    		        ON P.PLACE_NAME=F.FILE_CODE
    		     WHERE INDOOR=#{indoor} AND RN=1
    		  ORDER BY DISTANCE)
		WHERE ROWNUM &lt;=2
	</select>
	
	<!-- 메인 인기여행일정 순위 5위까지 -->
	<select id="bestTravelLIst" resultType="travel">
		SELECT TRAVEL_ID AS travelId
			  ,TRAVEL_TITLE AS travelTitle
			  ,SHARE_CNT AS shareCnt
			  ,WRITER as writer
		  FROM (
		  		SELECT TRAVEL_ID
		  			  ,TRAVEL_TITLE
		  			  ,SHARE_CNT
		  			  ,WRITER
			      FROM TRAVEL
			  ORDER BY SHARE_CNT DESC
			    )
		 WHERE ROWNUM &lt;=5
	</select>	
	
	
	
	
	
</mapper>